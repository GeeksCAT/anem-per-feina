apiVersion: v1
kind: ConfigMap
metadata:
  name: env-map
data:
  DEBUG: "True"
  LOG_LEVEL: "INFO"
  POSTGRES_DB: "anemperfeina"
  POSTGRES_USER: "anemperfeina"
  POSTGRES_HOST: "db"
  POSTGRES_PORT: "5432"
---
apiVersion: v1
kind: Secret
metadata:
  name: django-secrets
data:
  SECRET_KEY: c2VjcmV0
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
data:
  POSTGRES_PASSWORD: "czNjcmV0"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: db
spec:
  storageClassName: local-path
  capacity:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: geekscat/anem-per-feina:latest
        command: ["invoke"]
        args: [
          "wait-for",
          "db:5432",
          "migrate",
          "runserver",
          "--debug",
        ]
        envFrom:
          - configMapRef:
              name: env-map
          - secretRef:
              name: django-secrets
          - secretRef:
              name: postgres-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      volumes:
        - name: postgres-volume
          persistentVolumeClaim:
            claimName: postgres-pv-claim
      containers:
      - name: postgresql
        image: postgres:latest
        envFrom:
          - configMapRef:
              name: env-map
          - secretRef:
              name: django-secrets
          - secretRef:
              name: postgres-secrets
        volumeMounts:
          - mountPath: "/var/lib/postgresql/data"
            name: postgres-volume
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  ports:
  - name: http
    targetPort: 8000
    port: 80
  selector:
    app: backend
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  ports:
  - name: http
    targetPort: 5432
    port: 5432
  selector:
    app: db
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  # tls:
  #   - hosts:
  #     - nemperfeina.cat
  #     secretName: nemperfeina-cat-crt
  rules:
  - host: nemperfeina.cat
    http:
      paths:
      - path: /
        backend:
          serviceName: backend
          servicePort: 80
